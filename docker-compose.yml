version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: jira-estimate-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-jira_estimate}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - jira-estimate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-jira_estimate}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend сервер
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: jira-estimate-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-jira_estimate}
      POSTGRES_DB: ${POSTGRES_DB:-jira_estimate}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      PORT: ${SERVER_PORT:-3001}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      JIRA_BASE_URL: ${JIRA_BASE_URL:-}
      JIRA_USERNAME: ${JIRA_USERNAME:-}
      JIRA_API_TOKEN: ${JIRA_API_TOKEN:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports:
      - "${SERVER_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jira-estimate-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (опционально, для production)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: jira-estimate-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - server
    networks:
      - jira-estimate-network
    environment:
      REACT_APP_API_URL: http://localhost:${SERVER_PORT:-3001}

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: jira-estimate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - server
      - frontend
    networks:
      - jira-estimate-network

volumes:
  postgres_data:
    driver: local

networks:
  jira-estimate-network:
    driver: bridge
